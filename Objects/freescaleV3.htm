<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\freescaleV3.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\freescaleV3.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Sat Mar 14 18:51:18 2015
<BR><P>
<H3>Maximum Stack Usage =        216 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; GryAcc_Get &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[89]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[2b]">CAN0_Bus_Off_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">CAN0_Bus_Off_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[46]">ADC0_IRQHandler</a> from adc.o(i.ADC0_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[47]">ADC1_IRQHandler</a> from adc.o(i.ADC1_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[2b]">CAN0_Bus_Off_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[2c]">CAN0_Error_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[2a]">CAN0_ORed_Message_buffer_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[2e]">CAN0_Rx_Warning_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[2d]">CAN0_Tx_Warning_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[2f]">CAN0_Wake_Up_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[33]">CAN1_Bus_Off_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[34]">CAN1_Error_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[32]">CAN1_ORed_Message_buffer_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[36]">CAN1_Rx_Warning_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[35]">CAN1_Tx_Warning_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[37]">CAN1_Wake_Up_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[48]">CMP0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[49]">CMP1_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[4a]">CMP2_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[4e]">CMT_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[5e]">DAC0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[5f]">DAC1_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[d]">DMA0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[17]">DMA10_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[18]">DMA11_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[19]">DMA12_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[1a]">DMA13_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[1b]">DMA14_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[1c]">DMA15_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[e]">DMA1_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[f]">DMA2_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[10]">DMA3_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[11]">DMA4_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[12]">DMA5_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[13]">DMA6_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[14]">DMA7_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[15]">DMA8_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[16]">DMA9_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[1d]">DMA_Error_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[75]">DefaultISR</a> from startup_mk60d10.o(.text) referenced 136 times from startup_mk60d10.o(RESET)
 <LI><a href="#[58]">ENET_1588_Timer_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[5b]">ENET_Error_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[5a]">ENET_Receive_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[59]">ENET_Transmit_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[1f]">FTFL_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[4b]">FTM0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[4c]">FTM1_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[4d]">FTM2_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[25]">I2C0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[26]">I2C1_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[31]">I2S0_Rx_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[30]">I2S0_Tx_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[22]">LLW_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[62]">LPTimer_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[21]">LVD_LVW_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[61]">MCG_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[1e]">MCM_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from common.o(i.NMI_Handler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[55]">PDB0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[51]">PIT0_IRQHandler</a> from timer.o(i.PIT0_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[52]">PIT1_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[53]">PIT2_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[54]">PIT3_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[64]">PORTA_IRQHandler</a> from gpio.o(i.PORTA_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[65]">PORTB_IRQHandler</a> from gpio.o(i.PORTB_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[66]">PORTC_IRQHandler</a> from gpio.o(i.PORTC_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[67]">PORTD_IRQHandler</a> from gpio.o(i.PORTD_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[68]">PORTE_IRQHandler</a> from gpio.o(i.PORTE_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[24]">RNG_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[4f]">RTC_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[50]">RTC_Seconds_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[20]">Read_Collision_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[63]">Reserved102_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[69]">Reserved108_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[6a]">Reserved109_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[6c]">Reserved111_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[6d]">Reserved112_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[6e]">Reserved113_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[6f]">Reserved114_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[70]">Reserved115_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[71]">Reserved116_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[72]">Reserved117_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[73]">Reserved118_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[74]">Reserved119_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[38]">Reserved59_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[5c]">Reserved95_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[5d]">SDHC_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[27]">SPI0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[28]">SPI1_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[29]">SPI2_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[6b]">SWI_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[76]">SystemInit</a> from system_mk60d10.o(i.SystemInit) referenced from startup_mk60d10.o(.text)
 <LI><a href="#[60]">TSI0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[3b]">UART0_ERR_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[39]">UART0_LON_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[3a]">UART0_RX_TX_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[3d]">UART1_ERR_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[3c]">UART1_RX_TX_IRQHandler</a> from uart.o(i.UART1_RX_TX_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[3f]">UART2_ERR_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[3e]">UART2_RX_TX_IRQHandler</a> from uart.o(i.UART2_RX_TX_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[41]">UART3_ERR_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[40]">UART3_RX_TX_IRQHandler</a> from uart.o(i.UART3_RX_TX_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[43]">UART4_ERR_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[42]">UART4_RX_TX_IRQHandler</a> from usart.o(i.UART4_RX_TX_IRQHandler) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[45]">UART5_ERR_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[44]">UART5_RX_TX_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[56]">USB0_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[57]">USBDCD_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[23]">Watchdog_IRQHandler</a> from startup_mk60d10.o(.text) referenced from startup_mk60d10.o(RESET)
 <LI><a href="#[78]">__main</a> from __main.o(!!!main) referenced from startup_mk60d10.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[78]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[79]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7b]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[f8]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f9]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[7c]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[fa]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[80]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[fb]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[ff]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[100]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[101]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[102]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[103]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[104]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[105]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[106]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[107]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[108]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[109]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[10a]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[10b]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[10c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[10d]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[10e]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[85]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[110]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[111]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[112]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[113]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[114]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[115]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[7a]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[116]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[7d]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[7f]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[117]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[81]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; GryAcc_Get &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[118]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[8a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[84]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[119]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[86]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>CAN0_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Bus_Off_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Bus_Off_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>CAN0_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN0_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>CAN0_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN0_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN1_Bus_Off_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN1_ORed_Message_buffer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CAN1_Rx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>CAN1_Tx_Warning_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CAN1_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>ENET_1588_Timer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>ENET_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>ENET_Receive_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>ENET_Transmit_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FTFL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2S0_Rx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2S0_Tx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>LLW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>MCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>PIT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>PIT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>PIT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>Read_Collision_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>Reserved102_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>Reserved108_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>Reserved109_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>Reserved111_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>Reserved112_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>Reserved113_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>Reserved114_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>Reserved115_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>Reserved116_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>Reserved117_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>Reserved118_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>Reserved119_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>Reserved59_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>Reserved95_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SDHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SWI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>UART0_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART0_LON_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART0_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART3_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART5_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART5_RX_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USBDCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>Watchdog_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mk60d10.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_mk60d10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC1_Init
</UL>

<P><STRONG><a name="[11a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[121]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[83]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[87]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[122]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>ADC0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, adc.o(i.ADC0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, adc.o(i.ADC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>ADC1_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, anglebase.o(i.ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ADC1_Init &rArr; ADC_Init &rArr; ADC_Calibration &rArr; ADC_ITDMAConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Init
</UL>

<P><STRONG><a name="[8e]"></a>ADC_ITDMAConfig</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, adc.o(i.ADC_ITDMAConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_ITDMAConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration
</UL>

<P><STRONG><a name="[8c]"></a>ADC_Init</STRONG> (Thumb, 536 bytes, Stack size 8 bytes, adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_Init &rArr; ADC_Calibration &rArr; ADC_ITDMAConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCD_Init
</UL>

<P><STRONG><a name="[8f]"></a>ADC_IsConversionCompleted</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc.o(i.ADC_IsConversionCompleted))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Calibration
</UL>

<P><STRONG><a name="[90]"></a>Angle_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, anglebase.o(i.Angle_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Angle_Init &rArr; L3g_Init &rArr; IIC1_Init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[92]"></a>CCD_Init</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, ccd.o(i.CCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CCD_Init &rArr; ADC_Init &rArr; ADC_Calibration &rArr; ADC_ITDMAConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[c2]"></a>CLOCK_GetClockFrequency</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, common.o(i.CLOCK_GetClockFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_GetClockFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_Init
</UL>

<P><STRONG><a name="[be]"></a>CRC_CHECK</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, outputdata.o(i.CRC_CHECK))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC_CHECK
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutPut_Data
</UL>

<P><STRONG><a name="[93]"></a>Data_Load</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, flash.o(i.Data_Load))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Data_Load &rArr; Data_Trans_Load &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_read
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Trans_Load
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Trans_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[97]"></a>Data_Save</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, flash.o(i.Data_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Data_Save &rArr; Flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_write
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_erase_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataTran
</UL>

<P><STRONG><a name="[95]"></a>Data_Trans_Load</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, flash.o(i.Data_Trans_Load))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Data_Trans_Load &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Load
</UL>

<P><STRONG><a name="[96]"></a>Data_Trans_Save</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, flash.o(i.Data_Trans_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Data_Trans_Save &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataTran
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Load
</UL>

<P><STRONG><a name="[9e]"></a>DelayInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, common.o(i.DelayInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DelayInit &rArr; SYSTICK_DelayInit &rArr; SYSTICK_Init &rArr; CLOCK_GetClockFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_DelayInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Init
</UL>

<P><STRONG><a name="[a0]"></a>DelayUs</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, common.o(i.DelayUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>

<P><STRONG><a name="[a2]"></a>Delay_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delay.o(i.Delay_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Delay_Init &rArr; DelayInit &rArr; SYSTICK_DelayInit &rArr; SYSTICK_Init &rArr; CLOCK_GetClockFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[a3]"></a>Delay_ms</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, delay.o(i.Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_Delayms
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataReturn
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[a5]"></a>Delay_us</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, delay.o(i.Delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Delay_us &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
</UL>

<P><STRONG><a name="[a6]"></a>Flash_cmd_launch</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, flash.o(i.Flash_cmd_launch))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_write
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_erase_sector
</UL>

<P><STRONG><a name="[98]"></a>Flash_erase_sector</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, flash.o(i.Flash_erase_sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Flash_erase_sector
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_cmd_launch
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Save
</UL>

<P><STRONG><a name="[c9]"></a>Flash_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash.o(i.Flash_init))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[94]"></a>Flash_read</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, flash.o(i.Flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Load
</UL>

<P><STRONG><a name="[99]"></a>Flash_write</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, flash.o(i.Flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_cmd_launch
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Save
</UL>

<P><STRONG><a name="[a7]"></a>GryAcc_Get</STRONG> (Thumb, 232 bytes, Stack size 72 bytes, anglebase.o(i.GryAcc_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GryAcc_Get &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>IIC1_Init</STRONG> (Thumb, 140 bytes, Stack size 160 bytes, anglebase.o(i.IIC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = IIC1_Init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Init
</UL>

<P><STRONG><a name="[ae]"></a>IIC_Delay</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, anglebase.o(i.IIC_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC_Delay &rArr; Delay_us &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
</UL>

<P><STRONG><a name="[ba]"></a>IIC_Read</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, anglebase.o(i.IIC_Read))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
</UL>

<P><STRONG><a name="[b9]"></a>IIC_RepeatedStart</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, anglebase.o(i.IIC_RepeatedStart))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
</UL>

<P><STRONG><a name="[b8]"></a>IIC_Start</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, anglebase.o(i.IIC_Start))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
</UL>

<P><STRONG><a name="[bb]"></a>IIC_Stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, anglebase.o(i.IIC_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
</UL>

<P><STRONG><a name="[b0]"></a>IIC_Wait</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, anglebase.o(i.IIC_Wait))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
</UL>

<P><STRONG><a name="[af]"></a>IIC_Write</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, anglebase.o(i.IIC_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IIC_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Write
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Read
</UL>

<P><STRONG><a name="[b1]"></a>Kalman_Filter</STRONG> (Thumb, 526 bytes, Stack size 24 bytes, angle.o(i.Kalman_Filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Kalman_Filter &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>L3g_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, anglebase.o(i.L3g_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = L3g_Init &rArr; IIC1_Init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Write
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Init
</UL>

<P><STRONG><a name="[ab]"></a>L3g_Read</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, anglebase.o(i.L3g_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = L3g_Read &rArr; IIC_Delay &rArr; Delay_us &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_RepeatedStart
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GryAcc_Get
</UL>

<P><STRONG><a name="[b7]"></a>L3g_Write</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, anglebase.o(i.L3g_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = L3g_Write &rArr; IIC_Delay &rArr; Delay_us &rArr; DelayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3g_Init
</UL>

<P><STRONG><a name="[a4]"></a>LPTMR_Delayms</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, delay.o(i.LPTMR_Delayms))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[c7]"></a>Led_Init</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, led.o(i.Led_Init))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[c8]"></a>Led_Off</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, led.o(i.Led_Off))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, common.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>OutPut_Data</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, outputdata.o(i.OutPut_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OutPut_Data &rArr; __aeabi_f2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_CHECK
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataReturn
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>PIT0_IRQHandler</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, timer.o(i.PIT0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>PIT0_Init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, timer.o(i.PIT0_Init))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[64]"></a>PORTA_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gpio.o(i.PORTA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>PORTB_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gpio.o(i.PORTB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTB_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>PORTC_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gpio.o(i.PORTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>PORTD_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gpio.o(i.PORTD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>PORTE_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gpio.o(i.PORTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTE_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>PORT_PinMuxConfig</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gpio.o(i.PORT_PinMuxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORT_PinMuxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
</UL>

<P><STRONG><a name="[d4]"></a>Pwm_DutyCycle_Set</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, motor.o(i.Pwm_DutyCycle_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Pwm_DutyCycle_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataTran
</UL>

<P><STRONG><a name="[c0]"></a>SYSTICK_Cmd</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, systick.o(i.SYSTICK_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_DelayInit
</UL>

<P><STRONG><a name="[9f]"></a>SYSTICK_DelayInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systick.o(i.SYSTICK_DelayInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SYSTICK_DelayInit &rArr; SYSTICK_Init &rArr; CLOCK_GetClockFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_ITConfig
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayInit
</UL>

<P><STRONG><a name="[a1]"></a>SYSTICK_DelayUs</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, systick.o(i.SYSTICK_DelayUs))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>

<P><STRONG><a name="[c1]"></a>SYSTICK_ITConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, systick.o(i.SYSTICK_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_DelayInit
</UL>

<P><STRONG><a name="[bf]"></a>SYSTICK_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, systick.o(i.SYSTICK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYSTICK_Init &rArr; CLOCK_GetClockFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetClockFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSTICK_DelayInit
</UL>

<P><STRONG><a name="[c3]"></a>Sys_Init</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, main.o(i.Sys_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Sys_Init &rArr; Angle_Init &rArr; L3g_Init &rArr; IIC1_Init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT0_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Off
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Load
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCD_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angle_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>SystemInit</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, system_mk60d10.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>UART1_RX_TX_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, uart.o(i.UART1_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_RX_TX_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART2_RX_TX_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, uart.o(i.UART2_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_RX_TX_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART3_RX_TX_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, uart.o(i.UART3_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART3_RX_TX_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART4_RX_TX_IRQHandler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, usart.o(i.UART4_RX_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UART4_RX_TX_IRQHandler &rArr; WXWX_DataTran &rArr; Data_Trans_Save &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_ZhenReceive
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataTran
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mk60d10.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>UART_ITDMAConfig</STRONG> (Thumb, 328 bytes, Stack size 16 bytes, uart.o(i.UART_ITDMAConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_ITDMAConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
</UL>

<P><STRONG><a name="[cf]"></a>UART_Init</STRONG> (Thumb, 638 bytes, Stack size 24 bytes, uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Init &rArr; CLOCK_GetClockFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetClockFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Init
</UL>

<P><STRONG><a name="[c6]"></a>Usart_Init</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, usart.o(i.Usart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Usart_Init &rArr; UART_Init &rArr; CLOCK_GetClockFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITDMAConfig
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_PinMuxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[d1]"></a>WXWX_DataReturn</STRONG> (Thumb, 546 bytes, Stack size 8 bytes, wxwxdatasend.o(i.WXWX_DataReturn))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = WXWX_DataReturn &rArr; WXWX_Send &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutPut_Data
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cc]"></a>WXWX_DataTran</STRONG> (Thumb, 682 bytes, Stack size 48 bytes, wxwxdatasend.o(i.WXWX_DataTran))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = WXWX_DataTran &rArr; Data_Trans_Save &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwm_DutyCycle_Set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Trans_Save
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Save
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_RX_TX_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>WXWX_Send</STRONG> (Thumb, 410 bytes, Stack size 104 bytes, wxwxdatasend.o(i.WXWX_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WXWX_Send &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataReturn
</UL>

<P><STRONG><a name="[cb]"></a>WXWX_ZhenReceive</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, wxwxdatasend.o(i.WXWX_ZhenReceive))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_RX_TX_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[d8]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[d9]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[db]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[dc]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[dd]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[a9]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GryAcc_Get
</UL>

<P><STRONG><a name="[82]"></a>main</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; GryAcc_Get &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataReturn
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutPut_Data
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kalman_Filter
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GryAcc_Get
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GryAcc_Get
</UL>

<P><STRONG><a name="[df]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataTran
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
</UL>

<P><STRONG><a name="[e2]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[e5]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Trans_Load
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GryAcc_Get
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[e7]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
</UL>

<P><STRONG><a name="[e8]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Trans_Save
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
</UL>

<P><STRONG><a name="[e9]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataTran
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GryAcc_Get
</UL>

<P><STRONG><a name="[125]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Trans_Load
</UL>

<P><STRONG><a name="[126]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[9c]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Trans_Save
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_DataTran
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GryAcc_Get
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[ea]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[e1]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[e4]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[d7]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[eb]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[d6]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WXWX_Send
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[ed]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kalman_Filter
</UL>

<P><STRONG><a name="[ee]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kalman_Filter
</UL>

<P><STRONG><a name="[f1]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutPut_Data
</UL>

<P><STRONG><a name="[f2]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kalman_Filter
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[f0]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[e0]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kalman_Filter
</UL>

<P><STRONG><a name="[f4]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kalman_Filter
</UL>

<P><STRONG><a name="[f6]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[e6]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[da]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>

<P><STRONG><a name="[f7]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c4]"></a>NVIC_EncodePriority</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, main.o(i.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[c5]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Init
</UL>

<P><STRONG><a name="[8d]"></a>ADC_Calibration</STRONG> (Thumb, 326 bytes, Stack size 16 bytes, adc.o(i.ADC_Calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC_Calibration &rArr; ADC_ITDMAConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IsConversionCompleted
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITDMAConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[ce]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITDMAConfig
</UL>

<P><STRONG><a name="[ec]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[e3]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[f5]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[ef]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
